<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.yg.infra.modules.purchase.PurchaseMapper">
	<resultMap type="com.yg.infra.modules.purchase.Purchase" id="resultMapObj"></resultMap>
	
	<sql id="selectCommon">
		FROM purchase a
		left join member b on a.memberSeq = b.memberSeq
		left join product c on a.productSeq = c.productSeq
		WHERE 1=1
			<if test="memberSeq != null and !memberSeq.equals('')">AND a.memberSeq = #{memberSeq}</if>
			<if test="shDelNy != null and !shDelNy.equals('')">AND DelNy = #{shDelNy}</if>
			<!-- <if test="shDelNy != 3 ">AND DelNy = #{shDelNy}</if> 전체검색 value값을 3인것을 생성하고 하기-->
			<choose>
				<when test="shOption == 1">AND purchaseSeq LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 2">AND nm LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND product_name LIKE CONCAT('%',#{shValue},'%')</when>
				<otherwise></otherwise>
			</choose>
	</sql>
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT
				a.purchaseSeq
				,a.memberSeq
				,a.productSeq
				,a.quantity
				,a.memberAddr_seq
				,a.paytype
				,a.memberCard_seq
				,b.nm
				,b.id
				,c.product_name
				,c.price
			<include refid="selectCommon" />
			ORDER BY a.purchaseSeq DESC    
			<include refid="Base.orderByLimitForMysql" />
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.purchaseSeq
			,a.memberSeq
			,a.productSeq
			,a.quantity
			,a.memberAddr_seq
			,a.paytype
			,a.memberCard_seq
			,b.product_name
			,b.price
		FROM purchase a
		left join product b on b.productSeq = a.productSeq
		WHERE 1=1
		AND a.memberSeq = #{memberSeq}
	</select>
	
	<insert id="insert">
		INSERT INTO purchase(
			memberSeq
			,productSeq
			,quantity
			,memberAddr_seq
			,paytype
			,memberCard_seq
			)
			VALUES(
			#{memberSeq }
			,#{productSeq }
			,#{quantity }
			,#{memberAddr_seq }
			,#{paytype }
			,#{memberCard_seq }
			)
		<selectKey resultType="String" keyProperty="purchaseSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
</mapper>
